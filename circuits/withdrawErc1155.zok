from "./common/hashes/mimc/altbn254/mimc3.zok" import main as mimc3
from "ecc/babyjubjubParams" import main as curveParams
from "ecc/edwardsScalarMult" import main as scalarMult
from "ecc/edwardsCompress" import main as edwardsCompress
from "utils/pack/bool/pack256.zok" import main as bool_256_to_field
from "utils/pack/bool/nonStrictUnpack256.zok" import main as field_to_bool_256
from "hashes/poseidon/poseidon.zok" import main as poseidon
from "./common/merkle-tree/sparse-merkle-tree/checkproof.zok" import main as checkproof
from "./common/merkle-tree/sparse-merkle-tree/checkproof.zok" import checkUpdatedPath as checkUpdatedPath
from "./common/merkle-tree/mimc/altbn254/verify-membership/height32.zok" import main as checkRoot

def main(\
	public field tokenId,\
	public field amount,\
	private field  msgSender,\
	private field tokenOwners_msgSender_tokenId_0_oldCommitment_owner_secretKey,\
	private field tokenOwners_msgSender_tokenId_1_oldCommitment_owner_secretKey,\
	public field tokenOwners_msgSender_tokenId_0_oldCommitment_nullifier,\
	public field tokenOwners_msgSender_tokenId_1_oldCommitment_nullifier,\
	private  field tokenOwners_msgSender_tokenId_0_oldCommitment_value,\
	private field tokenOwners_msgSender_tokenId_0_oldCommitment_salt,\
	private  field tokenOwners_msgSender_tokenId_1_oldCommitment_value,\
	private field tokenOwners_msgSender_tokenId_1_oldCommitment_salt,\
	public field commitmentRoot,\
	private field tokenOwners_msgSender_tokenId_0_oldCommitment_membershipWitness_index,\
	private field[32] tokenOwners_msgSender_tokenId_0_oldCommitment_membershipWitness_siblingPath,\
	private field tokenOwners_msgSender_tokenId_1_oldCommitment_membershipWitness_index,\
	private field[32] tokenOwners_msgSender_tokenId_1_oldCommitment_membershipWitness_siblingPath,\
	private field tokenOwners_msgSender_tokenId_2_newCommitment_owner_publicKey,\
	private field tokenOwners_msgSender_tokenId_2_newCommitment_salt,\
	public field tokenOwners_msgSender_tokenId_2_newCommitment_commitment\
) -> (bool):

        
        // We need to hard-code the mappingId's of mappings into the circuit:
        field tokenOwners_mappingId = 15


        field tokenOwners_msgSender_tokenId_0 = tokenOwners_msgSender_tokenId_0_oldCommitment_value


        field tokenOwners_msgSender_tokenId_1 = tokenOwners_msgSender_tokenId_1_oldCommitment_value


        field tokenOwners_msgSender_tokenId_0_stateVarId_field = mimc3([tokenOwners_mappingId,  msgSender,tokenId])


        field tokenOwners_msgSender_tokenId_1_stateVarId_field = mimc3([tokenOwners_mappingId,  msgSender,tokenId])


        field tokenOwners_msgSender_tokenId_2_stateVarId_field = mimc3([tokenOwners_mappingId,  msgSender,tokenId])


        // tokenOwners_msgSender_tokenId_0_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(tokenOwners_msgSender_tokenId_0_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey_sign = edwardsCompress(tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey_point)[0]

        bool[254] tokenOwners_msgSender_tokenId_0_oldCommitment_yBits = field_to_bool_256(tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey_point[1])[2..256]
        tokenOwners_msgSender_tokenId_0_oldCommitment_yBits[0] = tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey_sign

        field tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...tokenOwners_msgSender_tokenId_0_oldCommitment_yBits])


        // tokenOwners_msgSender_tokenId_1_oldCommitment - PoKoSK:
        // The correctness of this secret key will be constrained within the oldCommitment existence check.

        field[2] tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey_point = scalarMult(field_to_bool_256(tokenOwners_msgSender_tokenId_1_oldCommitment_owner_secretKey), [curveParams().Gu, curveParams().Gv], curveParams())

        bool tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey_sign = edwardsCompress(tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey_point)[0]

        bool[254] tokenOwners_msgSender_tokenId_1_oldCommitment_yBits = field_to_bool_256(tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey_point[1])[2..256]
        tokenOwners_msgSender_tokenId_1_oldCommitment_yBits[0] = tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey_sign

        field tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey = bool_256_to_field([false, false, ...tokenOwners_msgSender_tokenId_1_oldCommitment_yBits])


          // Nullify tokenOwners_msgSender_tokenId_0:
  
          field tokenOwners_msgSender_tokenId_0_oldCommitment_nullifier_check_field = poseidon([\
            tokenOwners_msgSender_tokenId_0_stateVarId_field,\
            tokenOwners_msgSender_tokenId_0_oldCommitment_owner_secretKey,\
            tokenOwners_msgSender_tokenId_0_oldCommitment_salt\
          ])
  
          assert(\
          field_to_bool_256(tokenOwners_msgSender_tokenId_0_oldCommitment_nullifier)[8..256] == field_to_bool_256(tokenOwners_msgSender_tokenId_0_oldCommitment_nullifier_check_field)[8..256]\
          )
          


          // Nullify tokenOwners_msgSender_tokenId_1:
  
          field tokenOwners_msgSender_tokenId_1_oldCommitment_nullifier_check_field = poseidon([\
            tokenOwners_msgSender_tokenId_1_stateVarId_field,\
            tokenOwners_msgSender_tokenId_1_oldCommitment_owner_secretKey,\
            tokenOwners_msgSender_tokenId_1_oldCommitment_salt\
          ])
  
          assert(\
          field_to_bool_256(tokenOwners_msgSender_tokenId_1_oldCommitment_nullifier)[8..256] == field_to_bool_256(tokenOwners_msgSender_tokenId_1_oldCommitment_nullifier_check_field)[8..256]\
          )
          


        // tokenOwners_msgSender_tokenId_0_oldCommitment_commitment: preimage check


        field tokenOwners_msgSender_tokenId_0_oldCommitment_commitment_field = poseidon([\
          tokenOwners_msgSender_tokenId_0_stateVarId_field,\
          tokenOwners_msgSender_tokenId_0_oldCommitment_value,\
          tokenOwners_msgSender_tokenId_0_oldCommitment_owner_publicKey,\
          tokenOwners_msgSender_tokenId_0_oldCommitment_salt        ])


        // tokenOwners_msgSender_tokenId_1_oldCommitment_commitment: preimage check


        field tokenOwners_msgSender_tokenId_1_oldCommitment_commitment_field = poseidon([\
          tokenOwners_msgSender_tokenId_1_stateVarId_field,\
          tokenOwners_msgSender_tokenId_1_oldCommitment_value,\
          tokenOwners_msgSender_tokenId_1_oldCommitment_owner_publicKey,\
          tokenOwners_msgSender_tokenId_1_oldCommitment_salt        ])


        // tokenOwners_msgSender_tokenId_0_oldCommitment_commitment: existence check


        field tokenOwners_msgSender_tokenId_0_commitmentRoot_check = checkRoot(\
          tokenOwners_msgSender_tokenId_0_oldCommitment_membershipWitness_siblingPath,\
          tokenOwners_msgSender_tokenId_0_oldCommitment_commitment_field,\
          tokenOwners_msgSender_tokenId_0_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(tokenOwners_msgSender_tokenId_0_commitmentRoot_check)[8..256]\
        )


        // tokenOwners_msgSender_tokenId_1_oldCommitment_commitment: existence check


        field tokenOwners_msgSender_tokenId_1_commitmentRoot_check = checkRoot(\
          tokenOwners_msgSender_tokenId_1_oldCommitment_membershipWitness_siblingPath,\
          tokenOwners_msgSender_tokenId_1_oldCommitment_commitment_field,\
          tokenOwners_msgSender_tokenId_1_oldCommitment_membershipWitness_index\
        )


        assert(\
          field_to_bool_256(commitmentRoot)[8..256] == field_to_bool_256(tokenOwners_msgSender_tokenId_1_commitmentRoot_check)[8..256]\
        )


        // prepare secret state 'tokenOwners_msgSender_tokenId_2' for commitment

        assert(tokenOwners_msgSender_tokenId_0 + tokenOwners_msgSender_tokenId_1 >= amount)
            // TODO: assert no under/overflows

            field tokenOwners_msgSender_tokenId_2_newCommitment_value_field = (tokenOwners_msgSender_tokenId_0 + tokenOwners_msgSender_tokenId_1) - (amount)

        // tokenOwners_msgSender_tokenId_2_newCommitment_commitment - preimage check

        field tokenOwners_msgSender_tokenId_2_newCommitment_commitment_check_field = poseidon([\
          tokenOwners_msgSender_tokenId_2_stateVarId_field,\
          tokenOwners_msgSender_tokenId_2_newCommitment_value_field,\
          tokenOwners_msgSender_tokenId_2_newCommitment_owner_publicKey,\
          tokenOwners_msgSender_tokenId_2_newCommitment_salt\
        ])

        assert(\
          field_to_bool_256(tokenOwners_msgSender_tokenId_2_newCommitment_commitment)[8..256] == field_to_bool_256(tokenOwners_msgSender_tokenId_2_newCommitment_commitment_check_field)[8..256]\
        )

         return true