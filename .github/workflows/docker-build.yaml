name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  workflow_dispatch:
  push:
    tags:
      - v*

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  AWS_REGION: sa-east-1
  AWS_IAM_ROLE: "arn:aws:iam::452675509495:role/github-actions-admin"
  S3_BUCKET_NAME: eybrativosdigitais-swapescrow-3159132979
  DOCKER_REGISTRY: ghcr.io
  DOCKER_REPOSITORY: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_IAM_ROLE }}

      - name: Zip and upload to S3
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          GIT_REF: ${{ github.ref_name }}
        run: |
          export FILE_NAME="${REPOSITORY_NAME}-${GIT_REF}.tar"
          docker image save -o "${FILE_NAME}" "${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:latest"
          aws s3 cp "${FILE_NAME}" "s3://${S3_BUCKET_NAME}/docker/${FILE_NAME}" --acl "public-read"

      - name: Summary
        env:
          FILE_NAME: ${{ github.event.repository.name }}-${{ github.ref_name }}.tar
        run: |
          echo "## Docker build completed :green_circle:" >> $GITHUB_STEP_SUMMARY
          echo "### Tags" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r TAG; do
            echo "- $TAG" >> $GITHUB_STEP_SUMMARY
          done
          echo "## S3 Upload Completed :green_circle:" >> $GITHUB_STEP_SUMMARY
          echo "- Public URL: <https://${S3_BUCKET_NAME}.s3.sa-east-1.amazonaws.com/docker/${FILE_NAME}>" >> $GITHUB_STEP_SUMMARY
